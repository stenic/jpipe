name: Build

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

env:
  DOCKER_IMAGE: "ghcr.io/${{ github.repository }}-release"
  DOCKER_PLATFORMS: "linux/amd64,linux/arm64"
  PAT: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  version:
    name: Semantic release
    needs: docker
    runs-on: ubuntu-latest
    outputs:
      new_release_published: "${{ steps.semantic.outputs.new_release_published }}"
      new_release_version: "${{ steps.semantic.outputs.new_release_version }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ env.PAT }}

  docker_release:
    name: Docker release
    needs: version
    if: ${{ needs.version.outputs.new_release_published == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Current
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.DOCKER_IMAGE }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}},value=${{ needs.version.outputs.new_release_version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.version.outputs.new_release_version }}
            type=semver,pattern={{major}},value=${{ needs.version.outputs.new_release_version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ env.PAT }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha